plugins {
    id "chinook.application"
}

dependencies {
    implementation project(":chinook-client")

    runtimeOnly(libs.codion.framework.db.rmi)
}

applicationDefaultJvmArgs = [
        "-Xmx256m",
        "-Dcodion.client.connectionType=remote",
        "-Dcodion.server.hostname=${serverHost}",
        "-Dcodion.server.registryPort=${serverRegistryPort}",
        "-Dcodion.client.trustStore=truststore.jks",
        "-Dcodion.client.trustStorePassword=crappypass",
        "-Dsun.awt.disablegrab=true"
]

application {
    mainModule.set("is.codion.framework.demos.chinook.client")
    mainClass.set("is.codion.framework.demos.chinook.ui.ChinookAppPanel")
}

jlink {
    imageName.set(project.name)
    moduleName.set(application.mainModule)
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages", "--add-modules",
               "is.codion.framework.db.rmi,is.codion.plugin.logback.proxy"]

    launcher {
        jvmArgs = applicationDefaultJvmArgs
        jvmArgs += ["--add-reads", "chinook.merged.module=org.slf4j"]//for sslcontext-kickstart
    }

    jpackage {
        imageName = "Chinook-Remote"
        appVersion = project.version.replace("-SNAPSHOT", "")
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = "deb"
            icon = "../chinook.png"
            installerOptions = [
                    "--resource-dir", "build/jpackage/Chinook-Remote/lib",
                    "--linux-shortcut"
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = "msi"
            icon = "../chinook.ico"
            installerOptions = [
                    "--win-menu",
                    "--win-shortcut"
            ]
        }
    }
}

prepareMergedJarsDir.doLast {
    copy {
        from "src/main/resources"
        into "$jlinkBasePath/mergedjars"
    }
}