plugins {
    id 'org.beryx.jlink' version "${jlinkVersion}"
    id "de.jjohannes.extra-java-module-info" version "${extraJavaModuleInfoVersion}"
}

apply plugin: 'application'

dependencies {
    runtimeOnly "is.codion.jdk11:codion-framework-server:${version}"

    runtimeOnly project(":chinook-domain")

    runtimeOnly "is.codion.jdk11:codion-plugin-hikari-pool:${version}"
    runtimeOnly "is.codion.jdk11:codion-dbms-h2database:${version}"
    runtimeOnly "com.h2database:h2:1.4.200"

    //logging library, skipping the email stuff
    runtimeOnly ("is.codion.jdk11:codion-plugin-logback-proxy:${version}") {
        exclude group: 'com.sun.mail', module: 'javax.mail'
    }
}

apply from: "../extra-module-info-jasperreports.gradle"

application {
    mainModule = "is.codion.framework.server"
    getMainClass().set("is.codion.framework.server.EntityServer")
    applicationDefaultJvmArgs = [
            "-Xmx256m",
            "-Djava.rmi.server.hostname=${serverHost}",
            "-Dcodion.configurationFile=config/h2_embedded.config",
            "-Dlogback.configurationFile=config/logback.xml",
            "--add-reads", "is.codion.framework.domain=is.codion.framework.demos.chinook.domain.api"
    ]
}

distributions {
    main {
        contents {
            from(fileTree(dir: 'config', include: '**/*')) {
                into("bin/config")
            }
        }
    }
}

jlink {
    imageName = project.name + "-" + project.version
    moduleName = application.mainModule
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules',
               'is.codion.framework.db.local,is.codion.dbms.h2database,is.codion.plugin.hikari.pool,' +
                       'is.codion.plugin.logback.proxy,is.codion.framework.demos.chinook.domain']

    launcher {
        name = 'chinook-server'
        jvmArgs = [
                "-Xmx256m",
                "-Djava.rmi.server.hostname=${serverHost}",
                "-Dcodion.configurationFile=config/h2_embedded.config",
                "-Dlogback.configurationFile=config/logback.xml",
                "--add-reads", "is.codion.framework.domain=is.codion.framework.demos.chinook.domain.api"
        ]
    }

    jpackage {
        imageName = "Chinook-Server"
        appVersion = project.version.replace('-SNAPSHOT', '')
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = 'deb'
            icon = "../chinook.png"
            installerOptions = [
                    '--resource-dir', 'build/jpackage/Chinook-Server/lib',
                    '--linux-shortcut'
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = 'msi'
            icon = "../chinook.ico"
            imageOptions = ["--win-console"]
            installerOptions = [
                    '--win-menu',
                    '--win-shortcut'
            ]
        }
    }
}

tasks.jlink.doLast {
    copy { from 'config' into "$buildDir/$imageName/bin/config" }
}