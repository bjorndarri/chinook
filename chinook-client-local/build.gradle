plugins {
    id 'chinook.application'
}

dependencies {
    implementation project(':chinook-client')

    runtimeOnly project(':chinook-domain')

    runtimeOnly "is.codion.jdk11:codion-framework-db-local:${version}"
    runtimeOnly "is.codion.jdk11:codion-dbms-h2database:${version}"
    runtimeOnly "com.h2database:h2:${h2Version}"
}

applicationDefaultJvmArgs = [
        //add-reads for accessing default methods for Entity types
        "--add-reads", "is.codion.framework.domain=is.codion.framework.demos.chinook.domain.api",
        "-Dcodion.client.connectionType=local",
        "-Dcodion.db.url=jdbc:h2:mem:h2db",
        "-Dcodion.db.initScripts=classpath:create_schema.sql",
        "-Dsun.awt.disablegrab=true"
]

application {
    mainModule = "is.codion.framework.demos.chinook.client"
    getMainClass().set("is.codion.framework.demos.chinook.ui.ChinookAppPanel")
}

jlink {
    imageName = project.name
    moduleName = application.mainModule
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules',
               'is.codion.framework.db.local,is.codion.dbms.h2database,' +
                       'is.codion.plugin.logback.proxy,is.codion.framework.demos.chinook.domain']

    launcher {
        jvmArgs = applicationDefaultJvmArgs
    }

    jpackage {
        imageName = "Chinook-Local"
        appVersion = project.version.replace('-SNAPSHOT', '')
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = 'deb'
            icon = "../chinook.png"
            installerOptions = [
                    '--resource-dir', 'build/jpackage/Chinook-Local/lib',
                    '--linux-shortcut'
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = 'msi'
            icon = "../chinook.ico"
            installerOptions = [
                    '--win-menu',
                    '--win-shortcut'
            ]
        }
    }
}