plugins {
    id "chinook.application"
}

dependencies {
    implementation project(":chinook-load-test")

    runtimeOnly "is.codion.jdk11:codion-framework-db-http:${version}"
}

applicationDefaultJvmArgs = [
        "-Xmx2048m",
        "-Dcodion.client.connectionType=http",
        "-Dcodion.client.http.secure=false",
        "-Dcodion.client.http.hostname=${serverHost}",
        "-Dcodion.client.http.port=${serverHttpPort}"
]

application {
    mainModule.set("is.codion.framework.demos.chinook.client.loadtest")
    mainClass.set("is.codion.framework.demos.chinook.client.loadtest.ChinookLoadTest")
}

jlink {
    imageName.set(project.name)
    moduleName.set(application.mainModule)
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages", "--add-modules",
               "is.codion.framework.db.http,is.codion.plugin.logback.proxy"]

    mergedModule {
        excludeRequires("com.fasterxml.jackson.annotation")
    }

    launcher {
        jvmArgs = applicationDefaultJvmArgs
        jvmArgs += ["--add-reads", "chinook.merged.module=org.slf4j"]//for sslcontext-kickstart
    }

    jpackage {
        imageName = "Chinook-Load-Test-Http"
        appVersion = project.version.replace("-SNAPSHOT", "")
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = "deb"
            icon = "../chinook.png"
            installerOptions = [
                    "--resource-dir", "build/jpackage/Chinook-Load-Test-Http/lib",
                    "--linux-shortcut"
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = "msi"
            icon = "../chinook.ico"
            installerOptions = [
                    "--win-menu",
                    "--win-shortcut"
            ]
        }
    }
}