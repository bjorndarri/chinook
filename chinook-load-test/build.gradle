plugins {
    id "de.jjohannes.extra-java-module-info" version "${extraJavaModuleInfoVersion}"
}

apply plugin: 'application'

dependencies {
    implementation project(':chinook-domain-api')
    implementation project(':chinook-client')

    implementation "is.codion.jdk11:codion-swing-common-tools-ui:${version}"
    implementation "is.codion.jdk11:codion-swing-framework-ui:${version}"
    implementation "is.codion.jdk11:codion-swing-framework-tools:${version}"

    runtimeOnly "is.codion.jdk11:codion-framework-db-rmi:${version}"
    runtimeOnly "is.codion.jdk11:codion-framework-db-http:${version}"
}

apply from: "../extra-module-info-jasperreports.gradle"
apply from: "../extra-module-info-radiance.gradle"

java {
    modularity.inferModulePath = true
}

application {
    mainModule = "is.codion.framework.demos.chinook.client.loadtest"
    mainClassName = "is.codion.framework.demos.chinook.client.loadtest.ChinookLoadTest"
}

task runRmi(type: JavaExec) {
    group 'application'
    main = application.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType'    : 'remote',
            'codion.server.hostname'          : "${serverHost}",
            'codion.server.registryPort'      : "${serverRegistryPort}",
            'javax.net.ssl.trustStore'        : '../chinook-server/config/truststore.jks',
            'javax.net.ssl.trustStorePassword': 'crappypass'
    ]
}

task runHttp(type: JavaExec) {
    group 'application'
    main = application.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType': 'http',
            'codion.client.http.secure'   : 'false',
            'codion.client.http.hostname' : "${serverHost}",
            'codion.client.http.port'     : "${serverHttpPort}"
    ]
}