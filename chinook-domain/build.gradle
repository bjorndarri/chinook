plugins {
    id "java-library"
    id "chinook.jasperreports"
    id "chinook.spotless"
    id "io.github.f-cramer.jasperreports" version "0.0.1"
}

dependencies {
    api project(":chinook-domain-api")
    implementation(libs.codion.common.rmi)
    implementation(libs.codion.framework.i18n)
    implementation(libs.codion.framework.db.local)

    implementation(libs.jasperreports) {
        exclude group: "org.apache.xmlgraphics"
        exclude group: "xml-apis"
    }
    compileOnly(libs.jasperreports.jdt) {
        exclude group: "org.apache.xmlgraphics"
        exclude group: "xml-apis"
    }

    testImplementation(libs.codion.framework.domain.test)
    testRuntimeOnly(libs.codion.dbms.h2)
    testRuntimeOnly(libs.h2)
    testImplementation(libs.junit.api)
    testRuntimeOnly(libs.junit.engine)
}

extraJavaModuleInfo {
    automaticModule("net.sf.jasperreports:jasperreports-jdt", "jasperreports.jdt")
    automaticModule("org.eclipse.jdt:ecj", "org.eclipse.jdt.ecj")
}

test {
    useJUnitPlatform()
    systemProperty "codion.test.user", "scott:tiger"
    systemProperty "codion.db.url", "jdbc:h2:mem:h2db"
    systemProperty "codion.db.initScripts", "classpath:create_schema.sql"
}

jasperreports {
    classpath.from(project.sourceSets.main.compileClasspath)
}

sourceSets.main.resources.srcDir(compileAllReports)