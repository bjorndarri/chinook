plugins {
    id "chinook.library"
}

apply plugin: BuildReportsPlugin

dependencies {
    api project(":chinook-domain-api")
    implementation(libs.codion.common.rmi)
    implementation(libs.codion.framework.i18n)
    implementation(libs.codion.framework.db.local)

    runtimeOnly(libs.commons.logging)
    runtimeOnly(libs.commons.digester) {
        transitive = false
    }
    runtimeOnly(libs.commons.collections4)
    runtimeOnly(libs.commons.beanutils) {
        transitive = false
    }
    runtimeOnly(libs.jdt.core.compiler)

    testImplementation(libs.codion.framework.domain.test)
    testRuntimeOnly(libs.codion.dbms.h2)
    testRuntimeOnly(libs.h2)
    testImplementation(libs.junit.api)
    testRuntimeOnly(libs.junit.engine)
}

test {
    useJUnitPlatform()
    systemProperty "codion.test.user", "scott:tiger"
    systemProperty "codion.db.url", "jdbc:h2:mem:h2db"
    systemProperty "codion.db.initScripts", "classpath:create_schema.sql"
}

buildReports {
    sourceDir = file("src/main/reports")
    targetDir = file(sourceSets.main.output.resourcesDir.toString() + "/is/codion/framework/demos/chinook/domain")
}