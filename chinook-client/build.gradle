plugins {
    id 'org.beryx.jlink' version '2.23.5'
}

apply from: "../build-shared.gradle"

apply plugin: 'application'

configurations {
    runtimeLocal.extendsFrom runtimeClasspath
    runtimeRmi.extendsFrom runtimeClasspath
    runtimeHttp.extendsFrom runtimeClasspath
}

dependencies {
    implementation project(':chinook-domain-api')

    implementation "is.codion.jdk11:codion-swing-framework-ui:${codionVersion}"
    implementation "is.codion.jdk11:codion-plugin-imagepanel:${codionVersion}"
    implementation "is.codion.jdk11:codion-plugin-ikonli-foundation:${codionVersion}"

    runtimeOnly "is.codion.jdk11:codion-plugin-logback-proxy:${codionVersion}"

    runtimeLocal project(':chinook-domain')
    runtimeLocal "is.codion.jdk11:codion-framework-db-local:${codionVersion}"
    runtimeLocal "is.codion.jdk11:codion-dbms-h2database:${codionVersion}"
    runtimeLocal "com.h2database:h2:1.4.200"

    runtimeRmi "is.codion.jdk11:codion-framework-db-rmi:${codionVersion}"

    runtimeHttp "is.codion.jdk11:codion-framework-db-http:${codionVersion}"

    testImplementation "is.codion.jdk11:codion-framework-db-local:${codionVersion}"
    testImplementation "is.codion.jdk11:codion-dbms-h2database:${codionVersion}"
    testImplementation "com.h2database:h2:1.4.200"
    testRuntimeOnly project(':chinook-domain')
}

test {
    systemProperty "codion.db.url", "jdbc:h2:mem:h2db"
    systemProperty "codion.db.initScripts", "classpath:create_schema.sql"
}

application {
    mainModule = "is.codion.framework.demos.chinook.client"
    mainClassName = "is.codion.framework.demos.chinook.ui.ChinookAppPanel"
    applicationDefaultJvmArgs = [
            //add-reads for accessing default methods for Entity types
            "--add-reads", "is.codion.framework.domain=is.codion.framework.demos.chinook.domain.api",
            "-Dcodion.client.connectionType=local",
            "-Dcodion.db.url=jdbc:h2:mem:h2db",
            "-Dcodion.db.initScripts=classpath:create_schema.sql",
            "-Dsun.awt.disablegrab=true"
    ]
}

task runLocal(type: JavaExec) {
    group 'application'
    main = application.mainClassName
    classpath = configurations.runtimeLocal + sourceSets.main.getRuntimeClasspath()
    systemProperties = [
            'codion.client.connectionType' : 'local',
            'codion.db.url'                : 'jdbc:h2:mem:h2db',
            'codion.db.initScripts'        : 'classpath:create_schema.sql',
            'sun.awt.disablegrab'          : 'true'
    ]
}

task runRmi(type: JavaExec) {
    group 'application'
    main = application.mainClassName
    classpath = configurations.runtimeRmi + sourceSets.main.getRuntimeClasspath()
    systemProperties = [
            'codion.client.connectionType'    : 'remote',
            'codion.server.hostname'          : "${serverHost}",
            'javax.net.ssl.trustStore'        : '../chinook-server/config/truststore.jks',
            'javax.net.ssl.trustStorePassword': 'crappypass',
            'sun.awt.disablegrab'             : 'true'
    ]
}

task runHttp(type: JavaExec) {
    group 'application'
    main = application.mainClassName
    classpath = configurations.runtimeHttp + sourceSets.main.getRuntimeClasspath()
    systemProperties = [
            'codion.client.connectionType' : 'http',
            'codion.client.http.secure'    : 'false',
            'codion.client.http.hostname'  : "${serverHost}",
            'sun.awt.disablegrab'          : 'true'
    ]
}

jlink {
    configuration = 'runtimeRmi'
    imageName = "chinook-rmi"
    options = ['--bind-services', '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        jvmArgs = [
                "-Dcodion.client.connectionType=remote",
                "-Dcodion.server.hostname=${serverHost}",
                "-Djavax.net.ssl.trustStore=../conf/truststore.jks",
                "-Djavax.net.ssl.trustStorePassword=crappypass",
                "--add-reads", "is.codion.swing.framework.model=is.codion.demos.merged.module"//for json
        ]
    }
}

tasks.jlink.doLast {
    copy { from '../chinook-server/config/truststore.jks' into "$buildDir/$imageName/conf" }
}